{"version":3,"file":"3.6310f9af5345c722b930.js","sources":["webpack:///webpack:///./public/app/features/admin/LicenseChrome.tsx","webpack:///webpack:///./public/app/features/admin/UpgradePage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { stylesFactory, useTheme } from '@grafana/ui';\r\nimport { css } from 'emotion';\r\nimport { GrafanaTheme } from '@grafana/data';\r\n\r\nconst title = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\r\n\r\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\r\n  const backgroundUrl = theme.isDark\r\n    ? '/public/img/licensing/header_dark.svg'\r\n    : '/public/img/licensing/header_light.svg';\r\n  const footerBg = theme.isDark ? theme.colors.dark9 : theme.colors.gray6;\r\n\r\n  return {\r\n    container: css`\r\n      padding: 36px 79px;\r\n      background: ${theme.colors.panelBg};\r\n    `,\r\n    footer: css`\r\n      text-align: center;\r\n      padding: 16px;\r\n      background: ${footerBg};\r\n    `,\r\n    header: css`\r\n      height: 137px;\r\n      padding: 40px 0 0 79px;\r\n      position: relative;\r\n      background: url('${backgroundUrl}') right;\r\n  `,\r\n  };\r\n});\r\n\r\ninterface Props {\r\n  header: string;\r\n  subheader?: string;\r\n  editionNotice?: string;\r\n}\r\n\r\nexport const LicenseChrome: React.FC<Props> = ({ header, editionNotice, subheader, children }) => {\r\n  const theme = useTheme();\r\n  const styles = getStyles(theme);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <h2 style={title}>{header}</h2>\r\n        {subheader && <h3>{subheader}</h3>}\r\n\r\n        <Circle\r\n          size=\"128px\"\r\n          style={{\r\n            boxShadow: '0px 0px 24px rgba(24, 58, 110, 0.45)',\r\n            background: '#0A1C36',\r\n            position: 'absolute',\r\n            top: '19px',\r\n            left: '71%',\r\n          }}\r\n        >\r\n          <img\r\n            src=\"/public/img/grafana_icon.svg\"\r\n            alt=\"Grafana\"\r\n            width=\"80px\"\r\n            style={{ position: 'absolute', left: '23px', top: '20px' }}\r\n          />\r\n        </Circle>\r\n      </div>\r\n\r\n      <div className={styles.container}>{children}</div>\r\n\r\n      {editionNotice && <div className={styles.footer}>{editionNotice}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface CircleProps {\r\n  size: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const Circle: React.FC<CircleProps> = ({ size, style, children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n        borderRadius: '50%',\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { css } from 'emotion';\r\nimport { NavModel } from '@grafana/data';\r\nimport Page from '../../core/components/Page/Page';\r\nimport { LicenseChrome } from './LicenseChrome';\r\nimport { Forms } from '@grafana/ui';\r\nimport { hot } from 'react-hot-loader';\r\nimport { StoreState } from '../../types';\r\nimport { getNavModel } from '../../core/selectors/navModel';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props {\r\n  navModel: NavModel;\r\n}\r\n\r\nexport const UpgradePage: React.FC<Props> = ({ navModel }) => {\r\n  return (\r\n    <Page navModel={navModel}>\r\n      <Page.Contents>\r\n        <UpgradeInfo\r\n          editionNotice=\"You are running the open-source version of Grafana.\r\n        You have to install the Enterprise edition in order enable Enterprise features.\"\r\n        />\r\n      </Page.Contents>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst titleStyles = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\r\n\r\ninterface UpgradeInfoProps {\r\n  editionNotice?: string;\r\n}\r\n\r\nexport const UpgradeInfo: React.FC<UpgradeInfoProps> = ({ editionNotice }) => {\r\n  const columnStyles = css`\r\n    display: grid;\r\n    grid-template-columns: 100%;\r\n    column-gap: 20px;\r\n    row-gap: 40px;\r\n\r\n    @media (min-width: 1050px) {\r\n      grid-template-columns: 50% 50%;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <LicenseChrome header=\"Grafana Enterprise\" subheader=\"Get your free trial\" editionNotice={editionNotice}>\r\n      <div className={columnStyles}>\r\n        <FeatureInfo />\r\n        <ServiceInfo />\r\n      </div>\r\n    </LicenseChrome>\r\n  );\r\n};\r\n\r\nconst GetEnterprise: React.FC = () => {\r\n  return (\r\n    <div style={{ marginTop: '40px', marginBottom: '30px' }}>\r\n      <h2 style={titleStyles}>Get Grafana Enterprise</h2>\r\n      <CallToAction />\r\n      <p style={{ paddingTop: '12px' }}>\r\n        You can use the trial version for free for <strong>30 days</strong>. We will remind you about it{' '}\r\n        <strong>5 days before the trial period ends</strong>.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CallToAction: React.FC = () => {\r\n  return (\r\n    <Forms.LinkButton\r\n      variant=\"primary\"\r\n      size=\"lg\"\r\n      href=\"https://grafana.com/contact?about=grafana-enterprise&utm_source=grafana-upgrade-page\"\r\n    >\r\n      Contact us and get a free trial\r\n    </Forms.LinkButton>\r\n  );\r\n};\r\n\r\nconst ServiceInfo: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h4>At your service</h4>\r\n\r\n      <List>\r\n        <Item title=\"Enterprise Plugins\" image=\"/public/img/licensing/plugin_enterprise.svg\" />\r\n        <Item title=\"Critical SLA: 2 hours\" image=\"/public/img/licensing/sla.svg\" />\r\n        <Item title=\"Unlimited Expert Support\" image=\"/public/img/licensing/customer_support.svg\">\r\n          24x7x365 support via\r\n          <List nested={true}>\r\n            <Item title=\"Email\" />\r\n            <Item title=\"Private slack channel\" />\r\n            <Item title=\"Phone\" />\r\n          </List>\r\n        </Item>\r\n        <Item title=\"Hand-in-hand support\" image=\"/public/img/licensing/handinhand_support.svg\">\r\n          in the upgrade process\r\n        </Item>\r\n      </List>\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        <strong>Also included:</strong>\r\n        <br />\r\n        Indemnification, working with Grafana Labs on future prioritization, and training from the core Grafana team.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FeatureInfo: React.FC = () => {\r\n  return (\r\n    <div style={{ paddingRight: '11px' }}>\r\n      <h4>Enhanced Functionality</h4>\r\n      <FeatureListing />\r\n\r\n      <GetEnterprise />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FeatureListing: React.FC = () => {\r\n  return (\r\n    <List>\r\n      <Item title=\"Data source permissions\" />\r\n      <Item title=\"Reporting\" />\r\n      <Item title=\"SAML Authentication\" />\r\n      <Item title=\"Enhanced LDAP Integration\" />\r\n      <Item title=\"Team Sync\">LDAP, GitHub OAuth, Auth Proxy</Item>\r\n      <Item title=\"White labeling\" />\r\n      <Item title=\"Enterprise Plugins\">\r\n        <List nested={true}>\r\n          <Item title=\"Oracle\" />\r\n          <Item title=\"Splunk\" />\r\n          <Item title=\"Service Now\" />\r\n          <Item title=\"Dynatrace\" />\r\n          <Item title=\"DataDog\" />\r\n          <Item title=\"AppDynamics\" />\r\n        </List>\r\n      </Item>\r\n    </List>\r\n  );\r\n};\r\n\r\ninterface ListProps {\r\n  nested?: boolean;\r\n}\r\n\r\nconst List: React.FC<ListProps> = ({ children, nested }) => {\r\n  const listStyle = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 8px;\r\n\r\n    > div {\r\n      margin-bottom: ${nested ? 0 : 8}px;\r\n    }\r\n  `;\r\n\r\n  return <div className={listStyle}>{children}</div>;\r\n};\r\n\r\ninterface ItemProps {\r\n  title: string;\r\n  image?: string;\r\n}\r\n\r\nconst Item: React.FC<ItemProps> = ({ children, title, image }) => {\r\n  const imageUrl = image ? image : '/public/img/licensing/checkmark.svg';\r\n  const itemStyle = css`\r\n    display: flex;\r\n\r\n    > img {\r\n      display: block;\r\n      height: 22px;\r\n      flex-grow: 0;\r\n      padding-right: 12px;\r\n    }\r\n  `;\r\n  const titleStyle = css`\r\n    font-weight: 500;\r\n    line-height: 1.7;\r\n  `;\r\n\r\n  return (\r\n    <div className={itemStyle}>\r\n      <img src={imageUrl} />\r\n      <div>\r\n        <div className={titleStyle}>{title}</div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  navModel: getNavModel(state.navIndex, 'upgrading'),\r\n});\r\n\r\nexport default hot(module)(connect(mapStateToProps)(UpgradePage));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAKA;AAMA;AACA;AAQA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAEA;AAGA;AAOA;AAAA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AACA;AAEA;AACA;AAOA;AAEA;AAMA;AAAA;AACA;AAWA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;;AACA;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AASA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAMA;AAAA;AACA;AAUA;AACA;AAOA;AAAA;AACA;AACA;AAUA;AAKA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;;;;;;;A","sourceRoot":""}