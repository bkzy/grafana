{"version":3,"file":"AdminSettings.6310f9af5345c722b930.js","sources":["webpack:///webpack:///./public/app/features/admin/AdminSettings.tsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { hot } from 'react-hot-loader';\r\n\r\nimport { getBackendSrv } from '@grafana/runtime';\r\nimport { NavModel } from '@grafana/data';\r\n\r\nimport { StoreState } from 'app/types';\r\nimport { getNavModel } from 'app/core/selectors/navModel';\r\nimport Page from 'app/core/components/Page/Page';\r\n\r\nconst backendSrv = getBackendSrv();\r\n\r\ntype Settings = { [key: string]: { [key: string]: string } };\r\n\r\ninterface Props {\r\n  navModel: NavModel;\r\n}\r\n\r\ninterface State {\r\n  settings: Settings;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport class AdminSettings extends React.PureComponent<Props, State> {\r\n  state: State = {\r\n    settings: {},\r\n    isLoading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const settings: Settings = await backendSrv.get('/api/admin/settings');\r\n    this.setState({\r\n      settings,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { settings, isLoading } = this.state;\r\n    const { navModel } = this.props;\r\n\r\n    return (\r\n      <Page navModel={navModel}>\r\n        <Page.Contents isLoading={isLoading}>\r\n          <div className=\"grafana-info-box span8\" style={{ margin: '20px 0 25px 0' }}>\r\n            These system settings are defined in grafana.ini or custom.ini (or overridden in ENV variables). To change\r\n            these you currently need to restart grafana.\r\n          </div>\r\n\r\n          <table className=\"filter-table\">\r\n            <tbody>\r\n              {Object.entries(settings).map(([sectionName, sectionSettings], i) => (\r\n                <React.Fragment key={`section-${i}`}>\r\n                  <tr>\r\n                    <td className=\"admin-settings-section\">{sectionName}</td>\r\n                    <td />\r\n                  </tr>\r\n                  {Object.entries(sectionSettings).map(([settingName, settingValue], j) => (\r\n                    <tr key={`property-${j}`}>\r\n                      <td style={{ paddingLeft: '25px' }}>{settingName}</td>\r\n                      <td>{settingValue}</td>\r\n                    </tr>\r\n                  ))}\r\n                </React.Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </Page.Contents>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  navModel: getNavModel(state.navIndex, 'server-settings'),\r\n});\r\n\r\nexport default hot(module)(connect(mapStateToProps)(AdminSettings));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AA4CA;AA1CA;;;;;AACA;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAHA;AANA;AAmBA;AACA;AAAA;;AAEA;AACA;AACA;AAEA;;;;;;A","sourceRoot":""}